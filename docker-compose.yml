version: '3.8'
services:
  news-service:
    image: news-comments-service-1.0.0
    build:
      context: ./
      dockerfile: ./news-comments-service/Dockerfile
    restart: always
    depends_on:
      config-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      database-news-service:
        condition: service_healthy
    environment:
      ACTIVE_PROF: prod
    ports:
      - "8081:8080"
    networks:
      - news_application_ntwrk
    volumes:
      - logs:/var/log

  database-news-service:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: news-service-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    healthcheck:
      test: pg_isready -U postgres -d news-service-db
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - news_application_ntwrk
    volumes:
      - postgres-db:/var/lib/postgres

  user-service:
    image: user-service-1.0.0
    build:
      context: ./
      dockerfile: ./user-service/Dockerfile
    restart: always
    depends_on:
      database-user-service:
        condition: service_healthy
    environment:
      ACTIVE_PROF: prod
    ports:
      - "8082:8080"
    networks:
      - news_application_ntwrk

  database-user-service:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: app-user-service-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    healthcheck:
      test: pg_isready -U postgres -d app-user-service-db
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "5431:5432"
    networks:
      - news_application_ntwrk
    volumes:
      - postgres-db:/var/lib/postgres

  redis:
    image: redis
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - news_application_ntwrk

  swagger-ui:
    build: swagger-ui
    image: news_swagger-ui:1.0.0
    ports:
      - "81:8080"
    networks:
      - news_application_ntwrk

  proxy:
    build: proxy
    image: news_proxy:1.0.0
    depends_on:
      - news-service
    ports:
      - "8080:8080"
    networks:
      - news_application_ntwrk
    volumes:
      - proxy:/var/log/nginx

  config-server:
    image: config-server
    build: config-server
    restart: always
    healthcheck:
      test: wget -qO- http://localhost:8888/config-server/dev
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - news_application_ntwrk
    ports:
      - "8888:8888"

volumes:
  postgres-db:
  logs:
  proxy:

networks:
  news_application_ntwrk:
